#!/usr/bin/env node

const esbuild = require("esbuild");
const sveltePlugin = require("esbuild-svelte")
const processWindiCSS = require("./windi.ts")

const isDev = process.env.NODE_ENV !== "production";

esbuild.build({
    entryPoints: ["assets/scripts/main.js",],
    bundle: true,
    format: "iife",
    outfile: "static/bundle.js",
    watch: isDev,
    sourcemap: isDev,
    minify: !isDev,
    plugins: [sveltePlugin()],
    logLevel: "info"
})
    .catch(() => process.exit(1));
esbuild.build({
    entryPoints: ["assets/scripts/workbox.js"],
    bundle: true,
    format: "iife",
    minify: !isDev,
    watch: isDev,
    outfile: "static/service-worker.js",
})
    .catch(() => process.exit(1));

if (!isDev) {

    esbuild.build({
        entryPoints: ["assets/css/build.css"],
        bundle: true,
        minify: true,
        outfile: "static/main.css",
    })
        .catch(() => process.exit(1));
}

// process windicss then concat it and mode.css
if (!isDev) {
    console.log("start process windi css")
    esbuild.buildSync({
        entryPoints: ["./windi.ts"],
        platform: 'node',
        format: "cjs",
        outfile: './windi.js',
    })
    require("./windi")()
}
